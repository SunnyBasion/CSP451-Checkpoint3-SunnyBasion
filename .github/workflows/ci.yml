name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Linting Job
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # or the version your project requires

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run ESLint
      - name: Run ESLint
        run: npx eslint .

      # Step 5: Run Prettier check
      - name: Run Prettier
        run: npx prettier --check .

  test:
    name: Testing Job
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

      - name: Generate coverage report
        run: npm run coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Fail if coverage < 80%
        run: |
          COVERAGE=$(node scripts/check-coverage.js)
          if [ "$COVERAGE" -lt 80 ]; then
            echo "Coverage is below 80% ($COVERAGE%)"
            exit 1
          fi

  build:
    name: Build Job
    runs-on: ubuntu-latest
    needs: test # ensures it runs after the Testing Job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
